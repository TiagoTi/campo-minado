// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go
//
// Generated by this command:
//
//	mockgen -source=repository.go -destination=mocks/repository.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	domain "campo-minado/internal/core/domain"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockGamesRepository is a mock of GamesRepository interface.
type MockGamesRepository struct {
	ctrl     *gomock.Controller
	recorder *MockGamesRepositoryMockRecorder
}

// MockGamesRepositoryMockRecorder is the mock recorder for MockGamesRepository.
type MockGamesRepositoryMockRecorder struct {
	mock *MockGamesRepository
}

// NewMockGamesRepository creates a new mock instance.
func NewMockGamesRepository(ctrl *gomock.Controller) *MockGamesRepository {
	mock := &MockGamesRepository{ctrl: ctrl}
	mock.recorder = &MockGamesRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGamesRepository) EXPECT() *MockGamesRepositoryMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockGamesRepository) Get(id string) (*domain.Game, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", id)
	ret0, _ := ret[0].(*domain.Game)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockGamesRepositoryMockRecorder) Get(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockGamesRepository)(nil).Get), id)
}

// Save mocks base method.
func (m *MockGamesRepository) Save(new domain.Game) (*domain.Game, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", new)
	ret0, _ := ret[0].(*domain.Game)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Save indicates an expected call of Save.
func (mr *MockGamesRepositoryMockRecorder) Save(new any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockGamesRepository)(nil).Save), new)
}
