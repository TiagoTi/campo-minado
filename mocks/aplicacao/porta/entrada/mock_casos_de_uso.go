// Code generated by MockGen. DO NOT EDIT.
// Source: ./aplicacao/porta/entrada/casos_de_uso.go

// Package mock_entrada is a generated GoMock package.
package mock_entrada

import (
	dominio "campo-minado/aplicacao/dominio"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSessaoCampoMinado is a mock of SessaoCampoMinado interface.
type MockSessaoCampoMinado struct {
	ctrl     *gomock.Controller
	recorder *MockSessaoCampoMinadoMockRecorder
}

// MockSessaoCampoMinadoMockRecorder is the mock recorder for MockSessaoCampoMinado.
type MockSessaoCampoMinadoMockRecorder struct {
	mock *MockSessaoCampoMinado
}

// NewMockSessaoCampoMinado creates a new mock instance.
func NewMockSessaoCampoMinado(ctrl *gomock.Controller) *MockSessaoCampoMinado {
	mock := &MockSessaoCampoMinado{ctrl: ctrl}
	mock.recorder = &MockSessaoCampoMinadoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessaoCampoMinado) EXPECT() *MockSessaoCampoMinadoMockRecorder {
	return m.recorder
}

// Marcar mocks base method.
func (m *MockSessaoCampoMinado) Marcar(id string, p dominio.Posicao) (*dominio.CampoMinado, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Marcar", id, p)
	ret0, _ := ret[0].(*dominio.CampoMinado)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Marcar indicates an expected call of Marcar.
func (mr *MockSessaoCampoMinadoMockRecorder) Marcar(id, p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Marcar", reflect.TypeOf((*MockSessaoCampoMinado)(nil).Marcar), id, p)
}

// Novo mocks base method.
func (m *MockSessaoCampoMinado) Novo(nome string, tamanho dominio.Posicao, bombas int) (*dominio.CampoMinado, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Novo", nome, tamanho, bombas)
	ret0, _ := ret[0].(*dominio.CampoMinado)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Novo indicates an expected call of Novo.
func (mr *MockSessaoCampoMinadoMockRecorder) Novo(nome, tamanho, bombas interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Novo", reflect.TypeOf((*MockSessaoCampoMinado)(nil).Novo), nome, tamanho, bombas)
}

// Obter mocks base method.
func (m *MockSessaoCampoMinado) Obter(id string) (*dominio.CampoMinado, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Obter", id)
	ret0, _ := ret[0].(*dominio.CampoMinado)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Obter indicates an expected call of Obter.
func (mr *MockSessaoCampoMinadoMockRecorder) Obter(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Obter", reflect.TypeOf((*MockSessaoCampoMinado)(nil).Obter), id)
}

// Revelar mocks base method.
func (m *MockSessaoCampoMinado) Revelar(id string, p dominio.Posicao) (*dominio.CampoMinado, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Revelar", id, p)
	ret0, _ := ret[0].(*dominio.CampoMinado)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Revelar indicates an expected call of Revelar.
func (mr *MockSessaoCampoMinadoMockRecorder) Revelar(id, p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Revelar", reflect.TypeOf((*MockSessaoCampoMinado)(nil).Revelar), id, p)
}

// MockGeradorPosicoes is a mock of GeradorPosicoes interface.
type MockGeradorPosicoes struct {
	ctrl     *gomock.Controller
	recorder *MockGeradorPosicoesMockRecorder
}

// MockGeradorPosicoesMockRecorder is the mock recorder for MockGeradorPosicoes.
type MockGeradorPosicoesMockRecorder struct {
	mock *MockGeradorPosicoes
}

// NewMockGeradorPosicoes creates a new mock instance.
func NewMockGeradorPosicoes(ctrl *gomock.Controller) *MockGeradorPosicoes {
	mock := &MockGeradorPosicoes{ctrl: ctrl}
	mock.recorder = &MockGeradorPosicoesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGeradorPosicoes) EXPECT() *MockGeradorPosicoesMockRecorder {
	return m.recorder
}

// Tabuleiro mocks base method.
func (m *MockGeradorPosicoes) Tabuleiro(tamanho dominio.Posicao, qntBomba int, posicaoInicial dominio.Posicao) (dominio.Tabuleiro, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Tabuleiro", tamanho, qntBomba, posicaoInicial)
	ret0, _ := ret[0].(dominio.Tabuleiro)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Tabuleiro indicates an expected call of Tabuleiro.
func (mr *MockGeradorPosicoesMockRecorder) Tabuleiro(tamanho, qntBomba, posicaoInicial interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Tabuleiro", reflect.TypeOf((*MockGeradorPosicoes)(nil).Tabuleiro), tamanho, qntBomba, posicaoInicial)
}
