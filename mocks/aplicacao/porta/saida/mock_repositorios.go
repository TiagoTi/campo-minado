// Code generated by MockGen. DO NOT EDIT.
// Source: ./aplicacao/porta/saida/repositorios.go

// Package mock_saida is a generated GoMock package.
package mock_saida

import (
	dominio "campo-minado/aplicacao/dominio"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRepositorioCampoMinado is a mock of RepositorioCampoMinado interface.
type MockRepositorioCampoMinado struct {
	ctrl     *gomock.Controller
	recorder *MockRepositorioCampoMinadoMockRecorder
}

// MockRepositorioCampoMinadoMockRecorder is the mock recorder for MockRepositorioCampoMinado.
type MockRepositorioCampoMinadoMockRecorder struct {
	mock *MockRepositorioCampoMinado
}

// NewMockRepositorioCampoMinado creates a new mock instance.
func NewMockRepositorioCampoMinado(ctrl *gomock.Controller) *MockRepositorioCampoMinado {
	mock := &MockRepositorioCampoMinado{ctrl: ctrl}
	mock.recorder = &MockRepositorioCampoMinadoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepositorioCampoMinado) EXPECT() *MockRepositorioCampoMinadoMockRecorder {
	return m.recorder
}

// Obter mocks base method.
func (m *MockRepositorioCampoMinado) Obter(id string) (*dominio.CampoMinado, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Obter", id)
	ret0, _ := ret[0].(*dominio.CampoMinado)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Obter indicates an expected call of Obter.
func (mr *MockRepositorioCampoMinadoMockRecorder) Obter(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Obter", reflect.TypeOf((*MockRepositorioCampoMinado)(nil).Obter), id)
}
